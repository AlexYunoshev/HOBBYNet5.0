@model List<Domain.Models.Location>
@{
    ViewBag.Title = "Изменение локации";
}

<style>
    body {
        background-image: linear-gradient(rgba(0,0,0,0.4), rgba(0,0,0,0.4)), url(/images/background/house1.jpg);
    }


    .content-body {
        padding: 10px;
        border: solid black 1px;
        text-align: left;
        background-color: rgba(255, 255, 255, 1);
        border-radius: 15px;
        transition: .5s;
        margin-bottom: 10px;
        max-height: 150px;
        overflow: auto;
    }


    .content {
        position: relative;
        margin: 10px auto;
        width: 1200px;
        border-radius: 15px;
        transition: .5s;
        overflow: hidden;
        height: 80vh;
    }
</style>
<script>

    let map;
    let markers = [];
    let locationsArray = [];

    function initMap() {
        var centerLocation = new google.maps.LatLng(@Model[0].Latitude,@Model[0].Longitude);

        map = new google.maps.Map(document.getElementById("map"), {
            center: centerLocation,
            zoom: 15,
        });

        @foreach (var location in @Model)
        {
            @:locationsArray.push({ "lat": "@location.Latitude", "lon": "@location.Longitude", "placeid":"@location.PlaceId"});
        }

        var id = "place-" + locationsArray[0]["placeid"];
        var checked = document.getElementById(id);
        checked.checked = true;
        GetCheckedValue();
    }


    function removeMarkers() {
        for (let i = 0; i < markers.length; i++) {
            markers[i].setMap(null);
        }
        markers = [];
    }

    function addMarker(position, animation) {
        if (animation == true) {
            const marker = new google.maps.Marker({
                position,
                map,
                animation: google.maps.Animation.BOUNCE
            });
            markers.push(marker);
        }
        else {
            const marker = new google.maps.Marker({
                position,
                map,
            });
            markers.push(marker);
        }
    }


    function GetCheckedValue() {
        console.log(markers);
        var value = document.querySelector('input[name="places"]:checked').value;
        console.log(value);
        removeMarkers();
        console.log(markers);



        for (i = 0; i < locationsArray.length; i++) {
            var markerPosition = new google.maps.LatLng(locationsArray[i]["lat"], locationsArray[i]["lon"]);
            if (locationsArray[i]["placeid"] == value) {
                addMarker(markerPosition, true);
                  
                map.setCenter(markerPosition);
            }
            else {
                addMarker(markerPosition, false);
            }
        }
    }

</script>


<div class="content">
    <div class="content-body">
        <form>
            @foreach (var location in @Model)
            {
                <div>
                    <input type="radio" id="place-@location.PlaceId" name="places" value="@location.PlaceId" onchange="GetCheckedValue()">
                    <label for="place-@location.PlaceId">@location.Name</label>
                </div>
            }



        </form>



    </div>

    <div style="width: 1200px; height: 70%; position: absolute; top:170px; border:solid white 1px; border-radius:15px;" id="map"></div>
    <form id="form1" asp-action="Location" method="post">
        <input id="latitude" type="hidden" name="latitude" value="" />
        <input id="longitude" type="hidden" name="longitude" value="" />
    </form>
</div>






<script src="https://maps.googleapis.com/maps/api/js?callback=initMap" async></script>

